{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,aCEe,SAAAC,EAAuBC,GAClC,OAAOA,EACFC,KACG,EAACC,YACGA,EAAWC,MACXA,EAAKC,OACLA,EAAMC,aACNA,EAAYC,aACZA,EAAYC,GACZA,MAEA,IAAIC,EAAcJ,EAAOH,KAAIQ,GAASA,EAAMC,OAI5C,OAHIF,EAAYG,OAAS,IACrBH,EAAc,GAAGA,EAAY,OAAOA,EAAY,aAEpC,8BAA8BD,gFACYL,WAAqBC,gFAE7DA,0CACDK,OAAiBH,EAAaO,MAC3C,EACA,kDAEeN,EAAaO,QAAQ,4CAE5C,IAGHC,KAAK,G,CA9BdhB,EAAA,S,iBDKA,MAAMiB,EAAYC,SAASC,cAAc,eACnCC,EAAaF,SAASC,cAAc,eACpCE,EAAWH,SAASC,cAAc,aAClCG,EAAYJ,SAASK,eAAe,4BAE1CH,EAAWI,iBAAiB,QAASC,GACrCJ,EAASG,iBAAiB,QAASC,GAMnC,IAAIC,EAAY3B,EAAA4B,QAAMC,KAJC,WAKvBF,EAAYA,GAAwB,GAEpC,IAGIG,EAAYC,EAHZC,EAAYhC,EAAA4B,QAAMC,KAND,SAWd,SAASH,EAASO,GACF,iBAARA,IACPA,EAAMA,EAAIC,OAAOrB,MAGT,UAARoB,GACAZ,EAAWc,UAAUC,OAAO,UAC5Bd,EAASa,UAAUE,IAAI,YAEvBhB,EAAWc,UAAUE,IAAI,UACzBf,EAASa,UAAUC,OAAO,WAE9BpC,EAAA4B,QAAMU,KAtBe,gBAsBQL,GAIjC,SAAsBA,GAEdF,EADAQ,OAAOC,YAAc,KACX,EACHD,OAAOC,YAAc,IAClB,EACG,EAEbxC,EAAA4B,QAAMC,KAAKI,IACXH,GAAa,EAAAW,EAAAb,SAAc5B,EAAA4B,QAAMC,KAAKI,GAAKnB,OAAQiB,GACnDR,EAAUmB,gBAAgB,SAC1BZ,EAAWa,GAAG,aAAaC,IAGvB1B,EAAU2B,UAAY3C,EAClBF,EAAA4B,QACKC,KAAKI,GACLlB,MAAM6B,EAAME,KAAOf,EAAUA,EAASa,EAAME,KAAOf,GAC3D,IAGLD,EAAWiB,WAAW,KAEtBC,QAAQC,IAAI,WACZ1B,EAAU2B,aAAa,QAAS,iBAChChC,EAAU2B,UAAY,GACtBM,EAAAC,OAAOC,KAAK,gD,CA5BhBC,CAAarB,E,CAjBjBD,EAAYA,GAAwB,G,mCEXpC,IAAIuB,EAAevD,EAAA4B,QAAMC,KAFA,iBAGzB0B,EAAeA,GAA8B,GAE7CP,QAAQC,IAAI,kBAAmBM,GAC/B7B,EAAS6B","sources":["src/js/buttonsMyLibHeader.js","src/js/libraryMarkup.js","src/my-library.js"],"sourcesContent":["import lsAPI from './localestorage';\nimport { Notify } from 'notiflix';\nimport libraryMarkup from './libraryMarkup';\nimport getPagination from './pagination';\n\nconst libraryEl = document.querySelector('.js-library');\nconst watchedBtn = document.querySelector('.js-watched');\nconst queueBtn = document.querySelector('.js-queue');\nconst container = document.getElementById('tui-pagination-container');\n\nwatchedBtn.addEventListener('click', btnClick);\nqueueBtn.addEventListener('click', btnClick);\n\nconst LS_WATCHED_KEY = 'watched';\nconst LS_QUEUE_KEY = 'queue';\nconst LS_LIBRARY_STATE = 'library-state';\n\nlet watchList = lsAPI.load(LS_WATCHED_KEY);\nwatchList = watchList ? watchList : [];\n\nlet queueList = lsAPI.load(LS_QUEUE_KEY);\nqueueList = queueList ? queueList : [];\n\nlet pagination, perPage, currentPage;\n\nexport function btnClick(btn) {\n    if (typeof btn !== 'string') {\n        btn = btn.target.name;\n    }\n\n    if (btn === 'queue') {\n        watchedBtn.classList.remove('active');\n        queueBtn.classList.add('active');\n    } else {\n        watchedBtn.classList.add('active');\n        queueBtn.classList.remove('active');\n    }\n    lsAPI.save(LS_LIBRARY_STATE, btn);\n    onPagination(btn);\n}\n\nfunction onPagination(btn) {\n    if (window.innerWidth >= 1280) {\n        perPage = 9;\n    } else if (window.innerWidth >= 768) {\n        perPage = 8;\n    } else perPage = 4;\n\n    if (lsAPI.load(btn)) {\n        pagination = getPagination(lsAPI.load(btn).length, perPage);\n        container.removeAttribute('style');\n        pagination.on('afterMove', event => {\n            // currentPage = event.page;\n            // render(btn);\n            libraryEl.innerHTML = libraryMarkup(\n                lsAPI\n                    .load(btn)\n                    .slice(event.page * perPage - perPage, event.page * perPage)\n            );\n        });\n\n        pagination.movePageTo(1);\n    } else {\n        console.log('Чистота');\n        container.setAttribute('style', 'display: none');\n        libraryEl.innerHTML = '';\n        Notify.info('Your library is empty. You can add something');\n    }\n}\n\nexport const libraryList = {\n    render(ls) {\n        libraryEl.innerHTML = libraryMarkup(\n            lsAPI\n                .load(ls)\n                .slice(currentPage * perPage - perPage, currentPage * perPage)\n        );\n    },\n};\n","import getGenres from './getGenre';\n\nexport default function libraryMarkup(moviesSet) {\n    return moviesSet\n        .map(\n            ({\n                poster_path,\n                title,\n                genres,\n                release_date,\n                vote_average,\n                id,\n            }) => {\n                let movieGenres = genres.map(genre => genre.name);\n                if (movieGenres.length > 2) {\n                    movieGenres = `${movieGenres[0]}, ${movieGenres[1]}, Other`;\n                }\n                return /*html*/ `<li class=\"list__item\" id=\"${id}\">\n        <img class=\"list__img\" src=\"https://image.tmdb.org/t/p/original/${poster_path}\" alt=\"${title}\"></img>\n        <div class=\"list__text\">\n        <h2 class=\"list__title\">${title}</h2>\n        <p class=\"list__genre\">${movieGenres} | ${release_date.slice(\n                    0,\n                    4\n                )}&nbsp&nbsp\n        <span class=\"list__vote\">${vote_average.toFixed(1)}</span></p>\n        </div>\n      </li>`;\n            }\n        )\n        .join('');\n}\n","import './js/buttonsMyLibHeader';\nimport './js/modal';\nimport lsAPI from './js/localestorage';\nimport { watchedBtnClick, queueBtnClick } from './js/buttonsMyLibHeader';\nimport './js/modalSingUp';\nimport { btnClick } from './js/buttonsMyLibHeader';\n\n\nconst LS_LIBRARY_STATE = 'library-state';\n\nlet libraryState = lsAPI.load(LS_LIBRARY_STATE);\nlibraryState = libraryState ? libraryState : [];\n\nconsole.log('libraryState = ', libraryState);\nbtnClick(libraryState);\n"],"names":["$bJT8V","parcelRequire","$5a89392a7500e643$export$2e2bcd8739ae039","moviesSet","map","poster_path","title","genres","release_date","vote_average","id","movieGenres","genre","name","length","slice","toFixed","join","$db84767f1de8312a$var$libraryEl","document","querySelector","$db84767f1de8312a$var$watchedBtn","$db84767f1de8312a$var$queueBtn","$db84767f1de8312a$var$container","getElementById","addEventListener","$db84767f1de8312a$export$7b0f8be661aeb9d7","$db84767f1de8312a$var$watchList","default","load","$db84767f1de8312a$var$pagination","$db84767f1de8312a$var$perPage","$db84767f1de8312a$var$queueList","btn","target","classList","remove","add","save","window","innerWidth","$2nhTy","removeAttribute","on","event","innerHTML","page","movePageTo","console","log","setAttribute","$eWCmQ","Notify","info","$db84767f1de8312a$var$onPagination","$fc8e7c71b3b7ed96$var$libraryState"],"version":3,"file":"my-library.1a23cf64.js.map"}